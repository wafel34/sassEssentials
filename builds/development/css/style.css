@import url("https://fonts.googleapis.com/css?family=Bree+Serif|Roboto+Slab");
/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

html {
  font-size: 62.5%; }

body {
  background-color: #EEE8D6;
  color: #EEE8D6;
  margin: 0;
  padding: 0;
  font-size: 1.8em;
  font-family: "Roboto Slab", "Helvetica", sans-serif; }

.container {
  width: 80%;
  margin: 0 auto; }

h1, h2, h3, h4, h5, h6 {
  color: #D14348; }

.btn-default, .btn-hot, .btn-cool, .btn-awesome {
  display: inline-block;
  padding: 6px 12px;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  border: none;
  border-radius: 4px;
  font-family: "Bree Serif", sans-serif;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  color: #022933; }

.btn-default {
  background: #022933;
  color: #EEE8D6; }

.btn-hot {
  background: #D14348; }

.btn-cool {
  background: #0076A3; }

.grid::before, .grid::after {
  content: '';
  display: block; }

.grid::after {
  clear: both; }

.grid .item {
  float: left;
  width: 23.5%; }
  .grid .item:nth-child(n) {
    margin-bottom: 2%;
    margin-right: 2%; }
  .grid .item:nth-child(4n) {
    margin-right: 0;
    margin-bottom: 0; }

.grid img {
  display: block;
  border-radius: 5px;
  max-width: 100%; }

.table {
  font-size: 1.5em;
  text-align: left;
  width: 100%;
  color: #022933;
  border-collapse: collapse; }
  .table caption {
    font-size: 2.5rem;
    text-align: left;
    padding-bottom: 5px; }
  .table > thead > tr > th,
  .table > thead > tr > td,
  .table > tbody > tr > th,
  .table > tbody > tr > td,
  .table > tfoot > tr > th,
  .table > tfoot > tr > td {
    padding: 10px;
    border-bottom: 1px dotted #0076A3; }
  .table > thead > tr {
    background-color: #0076A3;
    color: #022933;
    transition: all .5s; }
    .table > thead > tr:hover {
      background-color: #a32d00; }
    .table > thead > tr > th {
      border-bottom: none; }
  .table > tbody > tr:nth-child(odd):hover {
    background-color: rgba(2, 41, 51, 0.2); }
  .table > tbody > tr:nth-child(even) {
    background-color: rgba(255, 186, 0, 0.5); }
    .table > tbody > tr:nth-child(even):hover {
      background-color: rgba(255, 186, 0, 0.8); }

.container {
  width: 80%;
  margin: 0 auto; }

.media {
  margin: 0;
  padding: 0;
  list-style-type: none; }
  .media .item {
    padding-bottom: 10px;
    padding-left: 10px;
    border-top: 1px dotted #FFBA00;
    transition: all .5s; }
    .media .item::before, .media .item::after {
      content: '';
      display: block; }
    .media .item::after {
      clear: both; }
    .media .item:hover {
      background: #FFBA00; }
    .media .item:last-of-type {
      border-bottom: 1px dotted #0076A3; }
  .media .head {
    margin: 0;
    padding: 0;
    color: #0076A3;
    font-size: 2em; }
    #typography .media .head {
      color: #D14348; }
  .media p {
    margin: 0;
    font-size: .5em; }
  .media img {
    float: left;
    margin-right: 10px; }
  .media a {
    text-decoration: none;
    color: #022933; }

.background {
  background-color: #022933;
  margin: 0 0 20px 0;
  width: 100%;
  display: table; }
  .background .container {
    display: table-cell;
    vertical-align: bottom;
    padding-bottom: 20px; }
    .background .container h1 {
      color: #FFBA00;
      font-family: "Roboto Slab", "Helvetica", sans-serif;
      font-size: 5em;
      line-height: 105%;
      margin-bottom: 0;
      padding: 0 10%; }
    .background .container p {
      padding: 0 10%;
      margin-top: 0; }

.jumbotron {
  background-image: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.6)), url("../images/water.jpg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  height: 100vh; }

.bridge {
  background-image: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.6)), url("../images/bridge.jpg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  height: 100vh; }

header nav {
  background-color: #022933; }

nav .branding {
  float: left;
  display: none; }
  @media (min-width: 970px) {
    nav .branding {
      display: block; } }

nav .branding h1 {
  font-size: 2.75rem;
  overflow: hidden;
  margin: 0;
  color: #FFBA00; }

nav ul {
  list-style: none;
  margin: 0;
  padding: 0; }
  nav ul::before, nav ul::after {
    content: '';
    display: block; }
  nav ul::after {
    clear: both; }

nav ul li {
  padding: 10px; }
  @media (min-width: 690px) {
    nav ul li {
      float: right; } }

nav ul li a {
  text-decoration: none;
  color: #EEE8D6;
  font-weight: 700; }
  nav ul li a:hover {
    color: #FFBA00; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
